// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DNP3Client.Pages.Edits
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using DNP3Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\_Imports.razor"
using DNP3Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\Pages\Edits\EditChild.razor"
using Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\Pages\Edits\EditChild.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\Pages\Edits\EditChild.razor"
using DNP3Client.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/EditChild/{IdFamily:int}/{IdChild:int}")]
    public partial class EditChild : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 51 "C:\Users\vaiti\Documents\GitHub\DNP3\DNP3Client\Pages\Edits\EditChild.razor"
       

    [Parameter]
    public int IdFamily { get; set; }

    [Parameter]
    public int IdChild { get; set; }

    private Child childToEdit = new Child();
    private Family _family = new Family();

    protected override async Task OnParametersSetAsync()
    {
        _family = await familyService.GetFamilyAsync(IdFamily);
        for (int i = 0; i < _family.Children.Count; i++)
        {
            if (_family.Children[i].Id == IdChild)
            {
                childToEdit = _family.Children[i];
            }
        }
    }

    public void Save()
    {
        for (int i = 0; i < _family.Children.Count; i++)
        {
            if (_family.Children[i].Id == childToEdit.Id)
            {
                _family.Children.Remove(_family.Children[i]);
                _family.Children.Add(childToEdit);
            }
        }
        familyService.UpdateAsync(_family);
        NavigationManager.NavigateTo($"/FamilyInfo/{IdFamily}");
    }

    public void Remove()
    {
        for (int i = 0; i < _family.Children.Count; i++)
        {
            if (_family.Children[i].Id == childToEdit.Id)
            {
                _family.Children.Remove(_family.Children[i]);
            }
        }
        familyService.UpdateAsync(_family);
        NavigationManager.NavigateTo($"/FamilyInfo/{IdFamily}");
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFamilyService familyService { get; set; }
    }
}
#pragma warning restore 1591
